      name: Demo Floorplan
      image: /local/custom_ui/floorplan/floorplan.svg
      stylesheet: /local/custom_ui/floorplan/floorplan.css
      
      # These options are optional
      # warnings:                  # enable warnings (to find out why things might ot be working correctly)
      # pan_zoom:                  # enable experimental panning / zooming
      # hide_app_toolbar:          # hide the application toolbar (when used as a custom panel)
      # date_format: DD-MMM-YYYY   # Date format to use in hover-over text
      
      last_motion_entity: sensor.template_last_motion
      last_motion_class: last-motion

      groups:

        - name: temperature_cannes
          entities:
             - sensor.netatmo_outdoor_temperature 
          text_template: '${entity.state ? (entity.state) + "°C": "undefined"}'
          class_template: 'return "static-temp";'

        - name: temperature_salon
          entities:
             - sensor.netatmo_indoor_temperature
          text_template: '${entity.state ? (entity.state) + "°C": "undefined"}'
          class_template: 'return "static-temp";'

        - name: temperature_sdb
          entities:
             - sensor.salle_de_bain
          text_template: '${entity.state ? (entity.state) + "°C": "undefined"}'
          class_template: 'return "static-temp";'
        - name: temperature_toilette
          entities:
             - sensor.toilette
          text_template: '${entity.state ? (entity.state) + "°C": "undefined"}'
          class_template: 'return "static-temp";'
        - name: temperature_entree
          entities:
             - sensor.entree
          text_template: '${entity.state ? (entity.state) + "°C": "undefined"}'
          class_template: 'return "static-temp";'
        - name: temperature_vestibule
          entities:
             - sensor.vestibule
          text_template: '${entity.state ? (entity.state) + "°C": "undefined"}'
          class_template: 'return "static-temp";'



        - name: Lights
          entities:
             - light.go
             - light.sejour
             - light.mur
             - light.cuisine
             - light.salon
             - light.toilette
             - light.entree
             - light.salle_de_bain
             - light.lit
             - light.ma_chambre
             - light.vestibule
          states:
            - state: 'on'
              class: 'light-on'
            - state: 'off'
              class: 'light-off'
          action:
            domain: homeassistant   # This optional parameter allows you to use other services such as homeassistant.toggle like here.
            service: toggle

        - name: Binary sensors
          entities:
            - binary_sensor.presence_chambres
            - binary_sensor.presence_couloir
          states:
            - state: 'off'
              class: 'light-off'
            - state: 'on'
              class: 'light-on'

        - name: Cameras
          entities:
            - camera.hallway
            - camera.driveway
            - camera.front_door
            - camera.backyard
          states:
            - state: 'idle'
              class: 'camera-idle'
              
#        - name: thermostat_temp
#          entities:
#            - climate.downstairs
#            - climate.upstairs
#          text_template: '${entity.attributes.current_temperature ? entity.attributes.current_temperature : "undefined"}'
#
# The above text_template uses extended attributes from the climate.* objects to get current temperature.

#        - name: text_states
#          entities:
#            - sensor.downstairs_thermostat_humidity
#            - sensor.dark_sky_temperature
#            - sensor.last_message
#          text_template: '${entity.state ? entity.state.replace(/\s{2,}/g,"") : "undefined"}'
#
# The above text_template uses jQuery syntax to search and replace any instance of 2 consecutive (or more) spaces in a string of text.
